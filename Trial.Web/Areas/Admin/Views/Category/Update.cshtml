@model Trial.Core.Models.Category.CategoryItem

@{
    ViewBag.Title = Trial.Core.Strings.CreateCategory;
    Layout = "~/Areas/Admin/Views/Shared/_PanelLayout.cshtml";
}

<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/AppCategory.js"></script>

<section class="section-body">
    <div class="card">
        <div class="card-head">
            <header>
                @Trial.Core.Strings.UpdateCategory
            </header>
        </div>
        <div class="card-body">

            @using (Html.BeginForm("Update", "Category", FormMethod.Post, new { @class = "form floating-label" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>@Trial.Core.Strings.Categories</label>
                            <select class="form-control" name="ParentId">
                                <option value="">Yok</option>
                                @if (Model.Categories?.Count > 0)
                                {
                                    foreach (var category in Model.Categories)
                                    {
                                        var selected = "";
                                        if (category.Id == Model.ParentId)
                                        {
                                            selected = "selected";
                                        }
                                        <option value="@category.Id" @selected>@category.DisplayName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-sm-4">
                            <label class="control-label">@Trial.Core.Strings.CategoryType</label>
                            <br />
                            @foreach (var type in EnumHelper.GetSelectList(typeof(Trial.Core.Enums.Category.CategoryType)))
                            {
                                var selected = "";

                                if (Enum.Parse(typeof(Trial.Core.Enums.Category.CategoryType), type.Value).ToString() == Model.Type.ToString())
                                {
                                    selected = "checked";
                                }
                                <label class="radio-inline radio-styled">
                                    <input type="radio" name="Type" value="@type.Value" @selected><span>@type.Text</span>
                                </label>
                            }
                        </div>
                        <div class="col-sm-4">
                            <label class="control-label">@Trial.Core.Strings.CategoryStatus</label>
                            <br />
                            @foreach (var type in EnumHelper.GetSelectList(typeof(Trial.Core.Enums.Category.CategoryStatus)))
                            {
                                var selected = "";

                                if (Enum.Parse(typeof(Trial.Core.Enums.Category.CategoryStatus), type.Value).ToString() == Model.Status.ToString())
                                {
                                    selected = "checked";
                                }
                                <label class="radio-inline radio-styled">
                                    <input type="radio" name="Status" value="@type.Value" @selected><span>@type.Text</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <input type="submit" value="@Trial.Core.Strings.Save" class="btn btn-default" />
                </div>
            }
        </div>
    </div>
</section>

